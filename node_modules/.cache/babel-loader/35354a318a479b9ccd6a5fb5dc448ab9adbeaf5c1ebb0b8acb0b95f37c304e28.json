{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Neutracker-Application/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Layout from \"./Pages/Layout\";\nimport MealForm from \"./Pages/MealForm\";\nimport Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\n\n// import MealItem from \"./component/MealItem\";\nimport MealList from \"./component/MealList\";\nimport './component/Card.css';\n\n// import Caloriesummary from \"./component/Caloriesummary\";\nimport './component/Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Major form states\n  const [nutritions, setNutrition] = useState([]);\n  const [currentNutrition, setCurrentNutrition] = useState({\n    itemName: \"\",\n    calories: \"\",\n    protein: \"\",\n    carbs: \"\",\n    fat: \"\"\n  });\n  const [notification, setNotification] = useState(null);\n\n  // Function for handling the input onChange event\n  function handleChange(e) {\n    setCurrentNutrition(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newNutrition = {\n      ...currentNutrition,\n      itemName: currentNutrition.itemName,\n      calories: currentNutrition.calories,\n      protein: currentNutrition.protein,\n      carbs: currentNutrition.carbs,\n      fat: currentNutrition.fat\n    };\n    fetch('https://nutrition-api-nyjf.onrender.com/nutritions', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newNutrition)\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Failed to add nutrition\");\n      return res.json();\n    }).then(data => setNutrition([...nutritions, data])).catch(error => console.error(\"POST error:\", error));\n    setNotification(newNutrition.itemName);\n    setCurrentNutrition({\n      itemName: \"\",\n      calories: \"\",\n      protein: \"\",\n      carbs: \"\",\n      fat: \"\"\n    });\n  }\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n      return () => clearInterval(timer);\n    }\n  }, [notification]);\n  useEffect(() => {\n    fetch('https://nutrition-api-nyjf.onrender.com/nutritions').then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch\");\n      return res.json();\n    }).then(data => setNutrition(data)).catch(error => console.error(\"Fetch error:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 42\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            nutritions: nutritions\n            // deleteNutrition={deleteNutrition} \n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/form\",\n          element: /*#__PURE__*/_jsxDEV(MealForm, {\n            currentNutrition: currentNutrition,\n            handleChange: handleChange,\n            handleSubmit: handleSubmit,\n            notification: notification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/list\",\n          element: /*#__PURE__*/_jsxDEV(MealList, {\n            nutritions: nutritions,\n            setNutrition: setNutrition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"QQoGfMfhVlC3cFmcr7vzLx977d4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Route","Routes","Layout","MealForm","Home","About","MealList","jsxDEV","_jsxDEV","App","_s","nutritions","setNutrition","currentNutrition","setCurrentNutrition","itemName","calories","protein","carbs","fat","notification","setNotification","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","newNutrition","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","json","data","catch","error","console","timer","setTimeout","clearInterval","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/home/oliver/Neutracker-Application/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Layout from \"./Pages/Layout\";\nimport MealForm from \"./Pages/MealForm\";\n\nimport Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\n\n// import MealItem from \"./component/MealItem\";\nimport MealList from \"./component/MealList\";\nimport './component/Card.css';\n\n// import Caloriesummary from \"./component/Caloriesummary\";\nimport './component/Card.css';\n\n\n\n\n\n\nexport default function App() {\n    // Major form states\n    const [nutritions, setNutrition] = useState([]);\n    const [currentNutrition, setCurrentNutrition] = useState({\n        itemName: \"\",\n        calories: \"\",\n        protein: \"\",\n        carbs: \"\",\n        fat: \"\",\n    });\n    const [notification, setNotification] = useState(null)\n\n    // Function for handling the input onChange event\n    function handleChange(e) {\n        setCurrentNutrition(prev => ({\n            ...prev,\n            [e.target.name]: e.target.value\n        }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const newNutrition = {\n            ...currentNutrition,\n            itemName: currentNutrition.itemName,\n            calories: currentNutrition.calories,\n            protein: currentNutrition.protein,\n            carbs: currentNutrition.carbs,\n            fat: currentNutrition.fat,\n        };\n\n        fetch('https://nutrition-api-nyjf.onrender.com/nutritions', {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newNutrition),\n        })\n            .then(res => {\n                if(!res.ok) throw new Error(\"Failed to add nutrition\");\n                return res.json();\n            })\n            .then(data => setNutrition([...nutritions, data]))\n            .catch(error => console.error(\"POST error:\", error));\n\n        setNotification(newNutrition.itemName)\n\n        setCurrentNutrition({\n            itemName: \"\",\n            calories: \"\",\n            protein: \"\",\n            carbs: \"\",\n            fat: \"\",\n        });\n    }\n\n\n    useEffect(() => {\n        if(notification){\n            const timer = setTimeout(() => {\n                setNotification(null)\n            },3000)\n            return () => clearInterval(timer)\n        }\n        \n    },[notification])\n\n   \n\n\n\n    useEffect(() => {\n        fetch('https://nutrition-api-nyjf.onrender.com/nutritions')\n            .then(res => {\n                if(!res.ok) throw new Error(\"Failed to fetch\");\n                return res.json();\n            })\n            .then(data => setNutrition(data))\n            .catch(error => console.error(\"Fetch error:\", error));\n    }, []);\n    \n\n\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<Layout />}>\n                    <Route index element={\n                        <Home \n                            nutritions={nutritions} \n                            // deleteNutrition={deleteNutrition} \n                        />\n                    } />\n                    <Route path=\"/form\" element={\n                        <MealForm\n                            currentNutrition={currentNutrition}\n                            handleChange={handleChange}\n                            handleSubmit={handleSubmit}\n\n                            notification={notification}\n                        />}\n                            />\n\n                    <Route path=\"/list\" element={<MealList\n                            nutritions={nutritions}\n                            setNutrition={setNutrition}\n                    />} />\n                    <Route path=\"/about\" element={<About />} />\n                </Route>\n            </Routes>\n        </BrowserRouter>\n\n    );\n\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}